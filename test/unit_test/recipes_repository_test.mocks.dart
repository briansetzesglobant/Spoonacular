// Mocks generated by Mockito 5.3.2 from annotations
// in spoonacular/test/unit_test/recipes_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:spoonacular/src/core/resource/data_state.dart' as _i3;
import 'package:spoonacular/src/data/datasource/remote/recipes_api_service.dart'
    as _i4;
import 'package:spoonacular/src/domain/entity/recipes_list_entity.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_1<T> extends _i1.SmartFake implements _i3.DataState<T> {
  _FakeDataState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RecipesApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipesApiService extends _i1.Mock implements _i4.RecipesApiService {
  MockRecipesApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dioApiService => (super.noSuchMethod(
        Invocation.getter(#dioApiService),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dioApiService),
        ),
      ) as _i2.Dio);
  @override
  set dioApiService(_i2.Dio? _dioApiService) => super.noSuchMethod(
        Invocation.setter(
          #dioApiService,
          _dioApiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.DataState<_i6.RecipesListEntity>> getRecipesRandom() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipesRandom,
          [],
        ),
        returnValue: _i5.Future<_i3.DataState<_i6.RecipesListEntity>>.value(
            _FakeDataState_1<_i6.RecipesListEntity>(
          this,
          Invocation.method(
            #getRecipesRandom,
            [],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i6.RecipesListEntity>>);
}
